{"version":3,"sources":["components/layout/Header.js","context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/about.js","components/contacts/EditContacts.js","components/pages/notfound.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","a","axios","get","res","this","data","value","children","Component","Consumer","TextInputGroup","label","name","placeholder","onChange","error","htmlFor","classnames","AddContact","email","phone","errors","e","target","onSumbit","preventDefault","newContact","post","then","history","push","onSubmit","bind","Contact","showContactInfo","onDeleteClick","delete","onClick","style","cursor","float","color","marginRight","Contacts","deleteContact","console","log","Fragment","EditContact","updContact","match","params","put","notfound","App","exact","path","component","About","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c819144.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = props => {\r\n  const {branding}=props;\r\n  return(\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n   <div className=\"container\">\r\n      <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n      </a>\r\n      <div>\r\n          <ul className=\"navbar-nav.mr-auto\">\r\n              <li className=\"nav-item\">\r\n              <i className=\"fas fa-home\"></i>\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                  Home\r\n                  </Link>\r\n              </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                  <Link to=\"/add\" className=\"nav-link\">\r\n                  Add\r\n                  </Link>\r\n              </li>\r\n\r\n\r\n                            <li className=\"nav-item\">\r\n                            <i className=\"fas fa-question\"></i>\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                  About\r\n                  </Link>\r\n              </li>\r\n\r\n          </ul>\r\n      </div>\r\n  </div>\r\n  </nav>\r\n  \r\n  );\r\n  };\r\n\r\n  Header.defaultProps ={\r\n      branding:'My app'\r\n  };\r\n\r\n  Header.propTypes ={\r\n      branding:PropTypes.string.isRequired\r\n  }\r\n\r\n  export default Header;","import { render } from '@testing-library/react';\r\nimport React ,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context=React.createContext();\r\nconst reducer =(state,action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts:state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            };\r\n            case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n               contacts:[action.payload,...state.contacts]\r\n                \r\n            };\r\n            case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n               contacts:state.contacts.map(contact => contact.id === action.payload.id ? (contact =action.payload): contact)\r\n                \r\n            };\r\n            default:\r\n                return state;\r\n    }\r\n}\r\nexport class Provider extends Component{\r\n    state={\r\n        contacts:[],\r\n\r\n        dispatch: action =>{\r\n            this.setState(state=>reducer(state,action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const res =await  axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        this.setState({contacts:res.data})\r\n    }\r\n    render()  {\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n            </Context.Provider>\r\n\r\n        )\r\n    }\r\n};\r\nexport const Consumer = Context.Consumer","    import React from 'react'\r\n    import PropTypes from 'prop-types'\r\n    import classnames from 'classnames'\r\n \r\n    const TextInputGroup =({\r\n        label,\r\n        name,\r\n        value,\r\n        placeholder,\r\n        type,\r\n        onChange,\r\n        error\r\n    }) =>{\r\n        return (\r\n             <div className=\"form-group\">\r\n                 <label htmlFor={name}>{label}</label>\r\n                 <input\r\n                 type={type}\r\n                 name={name}\r\n                 className={classnames('form-control form control-control-lg',{'is-invalid' :error })}\r\n                 placeholder={placeholder}\r\n                 value={value}\r\n                 onChange={onChange}\r\n                 />\r\n                 {error && <div\r\n                 className=\"invalid-feedback\">{error }\r\n                  </div>}\r\n             </div>\r\n        );\r\n    };\r\n    TextInputGroup.propTypes = {\r\n        label:PropTypes.string.isRequired,\r\n        name :PropTypes.string.isRequired,\r\n        placeholder :PropTypes.string.isRequired,\r\n        value :PropTypes.string.isRequired,\r\n        type :PropTypes.string.isRequired,\r\n        onChange :PropTypes.func.isRequired,\r\n        error: PropTypes.string.isRequired\r\n\r\n\r\n\r\n    }\r\n\r\n    TextInputGroup.defaultProps = {\r\n        type: 'text'\r\n    }\r\n    export default  TextInputGroup","            import React, { Component } from 'react'\r\n            import {Consumer} from '../../context'\r\n            import {v4 as uuid} from 'uuid';\r\n            import axios from 'axios';\r\n            import TextInputGroup from '../layout/TextInputGroup'\r\n            class AddContact extends Component {\r\n                state ={\r\n                    \r\n                    name:' ',\r\n                    email:' ',\r\n                    phone:' ',\r\n                    errors: {}\r\n                    \r\n                };\r\n\r\n                onChange = e =>\r\n                    this.setState({ [e.target.name]: e.target.value });\r\n                \r\n            \r\n                onSumbit=(dispatch,e)=>{\r\n                    e.preventDefault();\r\n                   \r\n                    const{name,email,phone}=this.state;\r\n                     // Check For Errors\r\n                        if (name === '') {\r\n                        this.setState({ errors: { name: 'Name is required' } });\r\n                        return;\r\n                        }\r\n\r\n                        if (email === '') {\r\n                        this.setState({ errors: { email: 'Email is required' } });\r\n                        return;\r\n                        }\r\n\r\n                        if (phone === '') {\r\n                        this.setState({ errors: { phone: 'Phone is required' } });\r\n                        return;\r\n                        }\r\n\r\n                       \r\n\r\n                    const newContact ={\r\n                       \r\n                        name,\r\n                        email,\r\n                        phone\r\n                    }\r\n                    axios.post('https://jsonplaceholder.typicode.com/users',newContact).then(res => dispatch({type:'ADD_CONTACT',payload:res.data }))\r\n                    \r\n                    //clear state\r\n                    this.setState({\r\n                        name: '',\r\n                        email: '',\r\n                        phone: '',\r\n                         errors: {}\r\n\r\n    });\r\n    this.props.history.push('/')\r\n                };\r\n            \r\n                render() {\r\n                    const {name,email,phone,errors}=this.state;\r\n                    \r\n                    return (\r\n                        <Consumer>\r\n                            {value =>{\r\n                                const{dispatch}=value;\r\n                                return (\r\n                            <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSumbit.bind(this,dispatch)}>\r\n                                \r\n                                <TextInputGroup \r\n                                   label=\"Name\"\r\n                                   name=\"name\"\r\n                                   placeholder=\"Enter name...............\"\r\n                                   value={name}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.name}\r\n                                 />\r\n\r\n\r\n                                \r\n                                <TextInputGroup \r\n                                   label=\"Email\"\r\n                                   name=\"email\"\r\n                                   type=\"email\"\r\n                                   placeholder=\"Enter email...............\"\r\n                                   value={email}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.email}\r\n                                 />\r\n\r\n                                \r\n                                <TextInputGroup \r\n                                   label=\"Phone\"\r\n                                   name=\"phone\"\r\n                                   placeholder=\"Enter phone\" \r\n                                   value={phone}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.phone}\r\n                                   \r\n                                 />\r\n\r\n                                <input\r\n                                type=\"submit\"\r\n                                value=\"ADD CONTACT\"\r\n                                className=\"btn btn-light btn-block\"\r\n\r\n                                />\r\n\r\n                        \r\n\r\n                               \r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div>  \r\n                                )\r\n                            }}\r\n                        </Consumer>\r\n\r\n                    )\r\n\r\n\r\n\r\n                \r\n                }\r\n            }\r\n            export default AddContact;","\r\nimport React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport {Consumer} from '../../context'\r\nimport axios from 'axios';\r\nimport './contact.css'\r\n\r\nclass Contact extends Component{\r\n    state={showContactInfo:true}\r\n    onDeleteClick=async (id,dispatch)=>{\r\n        try{\r\n            await  axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`).then(res =>dispatch({type:'DELETE_CONTACT',payload:id}))\r\n        }catch(err){\r\n            dispatch({type:'DELETE_CONTACT',payload:id})\r\n        }\r\n      \r\n     \r\n    }\r\n    \r\n    render(){\r\n        \r\n        const{id,name,email,phone}=this.props.contact;\r\n        const{showContactInfo}=this.state;\r\n        \r\n\r\n        return(\r\n            <Consumer>\r\n                {value=>{\r\n                    const {dispatch}=value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4>{name}<i onClick={()=> this.setState({showContactInfo:!this.state.showContactInfo})} className=\"fas fa-sort-down\" style={{cursor:'pointer'}}/></h4>\r\n                        <i className=\"fas fa-times\" style={{cursor:\"pointer\" ,float:\"right !important\",color:'red'}} onClick={this.onDeleteClick.bind(this,id,dispatch)}/><br/>\r\n                        <Link to={`/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n                        {showContactInfo?(<ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">{email}</li> \r\n                        <li className=\"list-group-item\">{phone}</li>\r\n                        </ul>):null}\r\n                       \r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes ={\r\n    name: PropTypes.string.isRequired,\r\n    email:PropTypes.string.isRequired,\r\n    phone:PropTypes.string.isRequired,\r\n  \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport {Consumer} from '../../context'\r\nclass Contacts extends Component {\r\n    \r\n    deleteContact=id=>{\r\n        console.log(id)\r\n        const {contacts}=this.state;\r\n        const newContact =contacts.filter(contact=>contact.id!==id);\r\n        this.setState({\r\n            contacts:newContact\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value =>{\r\n                    const {contacts}=value\r\n                    return(\r\n                        <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                        <span className=\"text-danger\">Contact</span>List\r\n                        </h1>\r\n                        {contacts.map(contact =>(\r\n                         <Contact \r\n                         key={contact.id}\r\n                         contact={contact}\r\n                        \r\n                         />    \r\n                        ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\n\r\nexport default () => {\r\n\r\n        return (\r\n            <div>\r\n             <h1 className=\"display-4\" >About Contact Manager</h1>\r\n            <p className=\"lead\">Simple manger for conatcts</p>\r\n            </div>\r\n        )\r\n    }\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react'\r\n\r\nexport default function notfound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"dispaly-4\">404 Not Found</h1>\r\n            <p className=\"lead\">Sorry this page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","  import React,{Component} from 'react';\n  import Header from './components/layout/Header';\n  import AddContact from './components/contacts/AddContact';\n  import Contacts from './components/contacts/Contacts';\n  import {Provider} from './context';\n  import About from './components/pages/about'\n  import EditContact from './components/contacts/EditContacts';\n  import NotFound from './components/pages/notfound'\n  import {HashRouter as Router,Route,Switch} from 'react-router-dom'\n  import 'bootstrap/dist/css/bootstrap.min.css';\n  import './App.css';\n\n\n  class App extends Component{\n    render(){\n      return(\n        <Provider>\n         <Router>\n          <div className=\"App\">\n          <Header branding=\"Contact manager\"/>\n          <div className=\"container\">\n              <Switch>\n              <Route exact path=\"/\"component={Contacts} />\n              <Route exact path=\"/about\"component={About} />\n              <Route exact path=\"/add\"component={AddContact} />\n              <Route exact path=\"/edit/:id\"component={EditContact} />\n              <Route exact component={NotFound} />\n              </Switch>\n             \n          </div>\n        </div>\n        </Router>\n        </Provider>\n        \n      );\n    }\n  }\n  \n\n  export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}